import*as array from"./array.js";import*as vec3 from"./vec3.js";import*as vec4 from"./vec4.js";const v1=vec3.create();const v2=vec3.create();export function fromPointNormal(normal,point,out=vec4.create()){vec3.norm(normal,v1);out[3]=-vec3.dot(v1,point);return array.copy(v1,out)}export function fromPoints(a,b,c,out=vec4.create()){return fromPointNormal(vec3.cross(vec3.sub(b,a,v1),vec3.sub(c,a,v2),v2),a,out)}export function norm(p,out=vec4.create()){return vec4.scale(p,1/(Math.sqrt(p[0]*p[0]+p[1]*p[1]+p[2]*p[2])||1),out)}export function dist(p,q){return p[0]*q[0]+p[1]*q[1]+p[2]*q[2]+p[3]}export function frontFacing(p,d){return p[0]*d[0]+p[1]*d[1]+p[2]*d[2]<=0}
//# sourceMappingURL=plane.js.map