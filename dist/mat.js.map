{"version":3,"file":"mat.js","names":["EPSILON","fequal","fequalNum","lerp","lerpNum","m","Array","copy","src","dst","srcOffset","dstOffset","count","length","i","a","b","epsilon","add","out","sub","scale","s","mul","n","rr","rc","f","j","k","t","dot","transpose"],"sources":["../assembly/mat.ts"],"sourcesContent":["import { Float, Int, ReadonlyVec, Vec } from './types';\nimport { EPSILON, fequal as fequalNum, lerp as lerpNum } from './scalar';\n\n// Temp variables\nconst m = new Array<Float>(16);\n\n/**\n * Generic function to copy elements from any array-like object to another.\n * @returns dst\n */\nexport function copy<T, U>(\n  src: T, dst: U, srcOffset: Int = 0, dstOffset: Int = 0,\n  // @ts-ignore: Skip type checking\n  count: Int = src.length - srcOffset\n): U {\n  for (let i = 0; i < count; ++i) {\n    // @ts-ignore: Skip type checking\n    unchecked(dst[dstOffset + i] = src[srcOffset + i]);\n  }\n  return dst;\n}\n\n/**\n * Checks if 2 number arrays have equal length and equal values within an epsilon.\n * @returns a == b\n */\nexport function fequal(a: ReadonlyVec, b: ReadonlyVec, epsilon: Float = EPSILON): boolean {\n  if (a.length - b.length) {\n    return false;\n  }\n  for (let i = 0; i < a.length; ++i) {\n    if (!unchecked(fequalNum(a[i], b[i], epsilon))) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sums 2 vectors.\n * @returns out = a + b\n */\nexport function add(a: ReadonlyVec, b: ReadonlyVec, out: Vec): Vec {\n  for (let i = 0; i < a.length; ++i) {\n    unchecked(out[i] = a[i] + b[i]);\n  }\n  return out;\n}\n\n/**\n * Subtracts 2 vectors.\n * @returns out = a - b\n */\nexport function sub(a: ReadonlyVec, b: ReadonlyVec, out: Vec): Vec {\n  for (let i = 0; i < a.length; ++i) {\n    unchecked(out[i] = a[i] - b[i]);\n  }\n  return out;\n}\n\n/**\n * Scales a vector by a constant.\n * @returns out = s * a\n */\nexport function scale(a: ReadonlyVec, s: Float, out: Vec): Vec {\n  for (let i = 0; i < a.length; ++i) {\n    unchecked(out[i] = a[i] * s);\n  }\n  return out;\n}\n\n/**\n * Calculates matrix multiplication of a * b, where size of a is (rr * n), and b is (n * rc).\n * @param n matrix order\n * @param a matrix of size rr * n\n * @param b matrix of size n * rc\n * @param out the output matrix of size rr * rc\n * @returns out = a * b\n */\n export function mul(n: Int, a: ReadonlyVec, b: ReadonlyVec, out: Vec): Vec {\n  const rr = (a.length / n) as Int;\n  const rc = (b.length / n) as Int;\n  let f: Float = 0;\n  m.length = rr * rc;\n\n  for (let i = 0; i < rc; ++i) {\n    for (let j = 0; j < rr; ++j) {\n      f = 0;\n      for (let k = 0; k < n; ++k) {\n        f += unchecked(a[k * rr + j] * b[i * n + k]);\n      }\n      unchecked(m[i * rr + j] = f);\n    }\n  }\n  copy(m, out, 0, 0, m.length);\n\n  return out;\n}\n\n/**\n * Lerp 2 vectors.\n * @returns out = lerp(a, b, t)\n */\nexport function lerp(a: ReadonlyVec, b: ReadonlyVec, t: Float, out: Vec): Vec {\n  for (let i = 0; i < a.length; ++i) {\n    unchecked(out[i] = lerpNum(a[i], b[i], t));\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of a 2 vectors.\n * @returns a * b\n */\nexport function dot(a: ReadonlyVec, b: ReadonlyVec): Float {\n  let f: Float = 0;\n  for (let i = 0; i < a.length; ++i) {\n    f += unchecked(a[i] * b[i]);\n  }\n  return f;\n}\n\n/**\n * Transposes a matrix.\n * @param n matrix order\n * @param m the matrix\n * @param out the output matrix\n * @returns out = [M]T\n */\nexport function transpose(n: Int, m: ReadonlyVec, out: Vec): Vec {\n  let f: Float = 0;\n  for (let i = 0; i < n; ++i) {\n    for (let j = i; j < n; ++j) {\n      // Swap mij and mji\n      f = unchecked(m[j * n + i]);\n      unchecked(out[j * n + i] = m[i * n + j]);\n      unchecked(out[i * n + j] = f);\n    }\n  }\n  return out;\n}\n"],"mappings":"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"}