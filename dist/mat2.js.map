{"version":3,"sources":["../assembly/mat2.ts"],"names":["array","m","create","id","out","fromMat3","copy","v","add","a","b","sub","scale","s","transpose","mul","mmul","det","invert","detA"],"mappings":"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","sourcesContent":["import { Float, ReadonlyMat2, Mat2, ReadonlyMat3 } from './types';\r\nimport * as array from './array';\r\n\r\n// Temp variables\r\nconst m: Mat2 = create();\r\n\r\n/**\r\n * Create a new identity {@link Mat2}.\r\n * @returns identity Mat2\r\n */\r\nexport function create(): Mat2 {\r\n  return [1, 0, 0, 1];\r\n}\r\n\r\n/**\r\n * Set a {@link Mat2} to identity.\r\n * @returns out = I2\r\n */\r\nexport function id(out: Mat2): Mat2 {\r\n  unchecked(out[0] = out[3] = 1);\r\n  unchecked(out[1] = out[2] = 0);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a {@link Mat2} from {@link ReadonlyMat3}.\r\n * @returns identity Mat2\r\n */\r\nexport function fromMat3(m: ReadonlyMat3, out: Mat2 = create()): Mat2 {\r\n  unchecked(out[0] = m[0]);\r\n  unchecked(out[1] = m[1]);\r\n  unchecked(out[2] = m[3]);\r\n  unchecked(out[3] = m[4]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy a {@link Mat2}.\r\n * @returns out\r\n */\r\nexport function copy(v: ReadonlyMat2, out: Mat2 = create()): Mat2 {\r\n  return array.copy(v, out) as Mat2;\r\n}\r\n\r\n/**\r\n * Sum 2 {@link Mat2}.\r\n * @returns out = a + b\r\n */\r\nexport function add(a: ReadonlyMat2, b: ReadonlyMat2, out: Mat2 = create()): Mat2 {\r\n  return array.add(a, b, out) as Mat2;\r\n}\r\n\r\n/**\r\n * Subtract 2 {@link Mat2}.\r\n * @returns out = a - b\r\n */\r\nexport function sub(a: ReadonlyMat2, b: ReadonlyMat2, out: Mat2 = create()): Mat2 {\r\n  return array.sub(a, b, out) as Mat2;\r\n}\r\n\r\n/**\r\n * Multiply a {@link Mat2} by a constant.\r\n * @returns out = s * M\r\n */\r\nexport function scale(m: ReadonlyMat2, s: Float, out: Mat2 = create()): Mat2 {\r\n  return array.scale(m, s, out) as Mat2;\r\n}\r\n\r\n/**\r\n * Transpose a {@link Mat2}.\r\n * @returns [M]T\r\n */\r\nexport function transpose(m: ReadonlyMat2, out: Mat2 = create()): Mat2 {\r\n  return array.transpose(2, m, out) as Mat2;\r\n}\r\n\r\n/**\r\n * Multiply 2 {@link Mat2}.\r\n * @returns out = a * b\r\n */\r\nexport function mul(a: ReadonlyMat2, b: ReadonlyMat2, out: Mat2 = create()): Mat2 {\r\n  return array.copy(array.mmul(2, a, b, m), out) as Mat2;\r\n}\r\n\r\n/**\r\n * Calculate the determinant of a {@link Mat2}.\r\n */\r\nexport function det(m: ReadonlyMat2): Float {\r\n  return unchecked(m[0] * m[3] - m[2] * m[1]);\r\n}\r\n\r\n/**\r\n * Returns inverse of a {@link Mat2}, or null if matrix is not invertible.\r\n * @param a input matrix\r\n * @param out output matrix\r\n * @returns out = M^-1, or null if matrix is not invertible\r\n */\r\nexport function invert(a: ReadonlyMat2, out: Mat2 = create()): Mat2 | null {\r\n  const detA: Float = det(a);\r\n  if (!detA) {\r\n    return null;\r\n  }\r\n\r\n  unchecked(m[0] = a[3]);\r\n  unchecked(m[1] = -a[1]);\r\n  unchecked(m[2] = -a[2]);\r\n  unchecked(m[3] = a[0]);\r\n\r\n  return scale(m, 1 / detA, out);\r\n}\r\n"],"file":"mat2.js"}