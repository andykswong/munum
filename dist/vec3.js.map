{"version":3,"sources":["../assembly/vec3.ts"],"names":["array","vec4","v","create","v4a","v4b","x","y","z","set","copy","out","add","a","b","sub","scale","s","mul","mmul","mmul4","m","dot","lerp","t","len2","len","Math","sqrt","dist","norm","cross"],"mappings":"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","sourcesContent":["import { Float, ReadonlyMat3, ReadonlyMat4, ReadonlyVec3, Vec3, Vec4 } from './types';\r\nimport * as array from './array';\r\nimport * as vec4 from './vec4';\r\n\r\n// Temp variables\r\nconst v: Vec3 = create();\r\nconst v4a: Vec4 = vec4.create();\r\nconst v4b: Vec4 = vec4.create();\r\n\r\n/**\r\n * Create a new {@link Vec3}.\r\n * @param x defaults to 0\r\n * @param y defaults to 0\r\n * @param z defaults to 0\r\n * @returns [x, y, z]\r\n */\r\nexport function create(x: Float = 0, y: Float = 0, z: Float = 0): Vec3 {\r\n  return [x, y, z];\r\n}\r\n\r\n/**\r\n * Set values of a {@link Vec3}.\r\n * @param v the vec\r\n * @param x defaults to 0\r\n * @param y defaults to 0\r\n * @param z defaults to 0\r\n * @returns v\r\n */\r\nexport function set(v: Vec3, x: Float = 0, y: Float = 0, z: Float = 0): Vec3 {\r\n  unchecked(v[0] = x);\r\n  unchecked(v[1] = y);\r\n  unchecked(v[2] = z);\r\n  return v;\r\n}\r\n\r\n/**\r\n * Copy a {@link Vec3}.\r\n * @returns out\r\n */\r\nexport function copy(v: ReadonlyVec3, out: Vec3 = create()): Vec3 {\r\n  return array.copy(v, out) as Vec3;\r\n}\r\n\r\n/**\r\n * Sum 2 {@link Vec3}.\r\n * @returns out = a + b\r\n */\r\nexport function add(a: ReadonlyVec3, b: ReadonlyVec3, out: Vec3 = create()): Vec3 {\r\n  return array.add(a, b, out) as Vec3;\r\n}\r\n\r\n/**\r\n * Subtract 2 {@link Vec3}.\r\n * @returns out = a - b\r\n */\r\nexport function sub(a: ReadonlyVec3, b: ReadonlyVec3, out: Vec3 = create()): Vec3 {\r\n  return array.sub(a, b, out) as Vec3;\r\n}\r\n\r\n/**\r\n * Multiply a {@link Vec3} by a constant.\r\n * @returns out = s * v\r\n */\r\nexport function scale(v: ReadonlyVec3, s: Float, out: Vec3 = create()): Vec3 {\r\n  return array.scale(v, s, out) as Vec3;\r\n}\r\n\r\n/**\r\n * Multiply 2 {@link Vec3} element-wise.\r\n * @returns out = a * b\r\n */\r\nexport function mul(v: ReadonlyVec3, s: ReadonlyVec3, out: Vec3 = create()): Vec3 {\r\n  return array.mul(v, s, out) as Vec3;\r\n}\r\n\r\n/**\r\n * Multiply a {@link ReadonlyMat3} with a {@link Vec3}.\r\n * @returns out = m * v\r\n */\r\nexport function mmul(a: ReadonlyMat3, b: ReadonlyVec3, out: Vec3 = create()): Vec3 {\r\n  return array.copy(array.mmul(3, a, b, v), out) as Vec3;\r\n}\r\n\r\n/**\r\n * Transform a {@link ReadonlyVec3} by a {@link ReadonlyMat4}.\r\n * @returns out = m * [x 1]\r\n */\r\nexport function mmul4(m: ReadonlyMat4, x: ReadonlyVec3, out: Vec3 = create()): Vec3 {\r\n  unchecked(vec4.set(v4a, x[0], x[1], x[2], 1));\r\n  return array.copy(array.mmul(4, m, v4a, v4b), out, 0, 0, 3) as Vec3;\r\n}\r\n\r\n/**\r\n * Calculate the dot product of 2 {@link Vec3}.\r\n * @returns a * b\r\n */\r\nexport function dot(a: ReadonlyVec3, b: ReadonlyVec3): Float {\r\n  return array.dot(a, b);\r\n}\r\n\r\n/**\r\n * Linear interpolate 2 {@link Vec3}.\r\n * @returns out = lerp(a, b, t)\r\n */\r\nexport function lerp(a: ReadonlyVec3, b: ReadonlyVec3, t: Float, out: Vec3 = create()): Vec3 {\r\n  return array.lerp(a, b, t, out) as Vec3;\r\n}\r\n\r\n/**\r\n * Calculate squared length of a {@link Vec3}.\r\n * @returns dot(v, v)\r\n */\r\nexport function len2(v: ReadonlyVec3): Float {\r\n  return dot(v, v);\r\n}\r\n\r\n/**\r\n * Calculate length of a {@link Vec3}.\r\n * @returns |v|\r\n */\r\nexport function len(v: ReadonlyVec3): Float {\r\n  return Math.sqrt(dot(v, v)) as Float;\r\n}\r\n\r\n/**\r\n * Calculate Euclidean distance of 2 {@link Vec3}.\r\n * @returns |a - b|\r\n */\r\nexport function dist(a: ReadonlyVec3, b: ReadonlyVec3): Float {\r\n  return len(sub(a, b, v));\r\n}\r\n\r\n/**\r\n * Normalize a {@link Vec3} and optionally stores result to the out param.\r\n * @returns v/|v|\r\n */\r\nexport function norm(v: ReadonlyVec3, out: Vec3 = create()): Vec3 {\r\n  return array.scale(v, 1 / (len(v) || 1), out) as Vec3;\r\n}\r\n\r\n/**\r\n * Calculate cross product of 2 {@link Vec3}.\r\n * @returns out = a x b\r\n */\r\nexport function cross(a: ReadonlyVec3, b: ReadonlyVec3, out: Vec3 = create()): Vec3 {\r\n  const y: Float = unchecked(a[2] * b[0] - b[2] * a[0]);\r\n  const z: Float = unchecked(a[0] * b[1] - b[0] * a[1]);\r\n  unchecked(out[0] = a[1] * b[2] - b[1] * a[2]);\r\n  unchecked(out[1] = y);\r\n  unchecked(out[2] = z);\r\n  return out;\r\n}\r\n"],"file":"vec3.js"}