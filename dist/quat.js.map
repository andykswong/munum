{"version":3,"file":"quat.js","names":["mat","mat4","vec3","vec4","EPSILON","fequal","q1","create","q2","fromAxisAngle","axis","angle","out","scale","Math","sin","cos","fromAngleX","fromAngleY","fromAngleZ","fromUnitVecs","from","to","dot","PI","cross","norm","toMat4","q","xx","xy","xz","yy","yz","zz","wx","wy","wz","copy","sqrLen","len","conj","invert","l","mul","a","b","ax","ay","az","aw","bx","by","bz","bw","rotateVec3","v","lerp","t","cosTheta","magB","slerp","scale0","scale1","theta","acos","sinTheta"],"sources":["../assembly/quat.ts"],"sourcesContent":["import { Float, Mat4, Quat, ReadonlyQuat, ReadonlyVec3, Vec, Vec3 } from './types';\nimport * as mat from './mat';\nimport * as mat4 from './mat4';\nimport * as vec3 from './vec3';\nimport * as vec4 from './vec4';\nimport { EPSILON, fequal } from './scalar';\n\n// Temp variables\nconst q1: Quat = create();\nconst q2: Quat = create();\n\n/**\n * Create a new identity {@link Quat}.\n * @returns [0, 0, 0, 1]\n */\nexport function create(): Quat {\n  return [0, 0, 0, 1];\n}\n\n/**\n * Create a {@link Quat} from a unit axis vector and rotation angle in couterclockwise direction.\n */\nexport function fromAxisAngle(axis: ReadonlyVec3, angle: Float, out: Quat = create()): Quat {\n  mat.scale(axis, Math.sin(angle / 2) as Float, out);\n  unchecked(out[3] = Math.cos(angle / 2) as Float);\n  return out;\n}\n\n/**\n * Returns a {@link Quat} from a rotation around x-axis in couterclockwise direction.\n * @returns the quat representing the rotation\n */\nexport function fromAngleX(angle: Float, out: Quat = create()): Quat {\n  unchecked(out[0] = Math.sin(angle / 2) as Float);\n  unchecked(out[3] = Math.cos(angle / 2) as Float);\n  unchecked(out[1] = out[2] = 0);\n  return out;\n}\n\n/**\n * Returns a {@link Quat} from a rotation around y-axis in couterclockwise direction.\n * @returns the quat representing the rotation\n */\nexport function fromAngleY(angle: Float, out: Quat = create()): Quat {\n  unchecked(out[1] = Math.sin(angle / 2) as Float);\n  unchecked(out[3] = Math.cos(angle / 2) as Float);\n  unchecked(out[0] = out[2] = 0);\n  return out;\n}\n\n/**\n * Returns a {@link Quat} from a rotation around z-axis in couterclockwise direction.\n * @returns the quat representing the rotation\n */\nexport function fromAngleZ(angle: Float, out: Quat = create()): Quat {\n  unchecked(out[2] = Math.sin(angle / 2) as Float);\n  unchecked(out[3] = Math.cos(angle / 2) as Float);\n  unchecked(out[0] = out[1] = 0);\n  return out;\n}\n\n/**\n * Returns a {@link Quat} that represents the shortest arc rotation between 2 unit vectors.\n * @returns the quat representing the rotation\n */\nexport function fromUnitVecs(from: ReadonlyVec3, to: ReadonlyVec3, out: Quat = create()): Quat {\n  const dot: Float = vec3.dot(from, to);\n\n  if (fequal(dot, -1)) { // vectors are in parallel but opposite direction\n    // use arbitrary perpendicular vector = (0, z, -y)\n    unchecked(out[0] = 0);\n    unchecked(out[1] = from[2]);\n    unchecked(out[2] = -from[1]);\n    return fromAxisAngle(out as Vec as Vec3, Math.PI as Float, out);\n  } else if (fequal(dot, 1)) { // vectors are in same direction\n    unchecked(out[0] = out[1] = out[2] = 0);\n    unchecked(out[3] = 1);\n    return out;\n  }\n\n  // store perpendicular vector to the xyz of out.\n  vec3.cross(from, to, out as Vec as Vec3);\n  unchecked(out[3] = 1 + dot);\n  return norm(out, out);\n}\n\n/**\n * Convert a {@link Quat} to a {@link Mat4}.\n * @returns Mat4\n */\nexport function toMat4(q: ReadonlyQuat, out: Mat4 = mat4.create()): Mat4 {\n  const\n    xx: Float = unchecked(q[0] * q[0]),\n    xy: Float = unchecked(q[0] * q[1]),\n    xz: Float = unchecked(q[0] * q[2]),\n    yy: Float = unchecked(q[1] * q[1]),\n    yz: Float = unchecked(q[1] * q[2]),\n    zz: Float = unchecked(q[2] * q[2]),\n    wx: Float = unchecked(q[3] * q[0]),\n    wy: Float = unchecked(q[3] * q[1]),\n    wz: Float = unchecked(q[3] * q[2]);\n\n  unchecked(out[0] = 1 - 2 * (yy + zz));\n  unchecked(out[1] = 2 * (xy + wz));\n  unchecked(out[2] = 2 * (xz - wy));\n  unchecked(out[4] = 2 * (xy - wz));\n  unchecked(out[5] = 1 - 2 * (xx + zz));\n  unchecked(out[6] = 2 * (yz + wx));\n  unchecked(out[8] = 2 * (xz + wy));\n  unchecked(out[9] = 2 * (yz - wx));\n  unchecked(out[10] = 1 - 2 * (xx + yy));\n\n  unchecked(out[3] = out[7] = out[11] = out[12] = out[13] = out[14] = 0);\n  unchecked(out[15] = 1);\n  return out;\n}\n\n/**\n * Copy a {@link Quat}.\n * @returns out\n */\nexport function copy(q: ReadonlyQuat, out: Quat = create()): Quat {\n  return mat.copy(q, out) as Quat;\n}\n\n/**\n * Calculate dot product between 2 {@link Quat}.\n * @returns a * b\n */\nexport const dot: (a: ReadonlyQuat, b: ReadonlyQuat) => Float = mat.dot;\n\n/**\n * Calculate squared length of a {@link ReadonlyQuat}.\n * @returns dot(v, v)\n */\nexport const sqrLen: (v: ReadonlyQuat) => Float = vec4.sqrLen;\n\n/**\n * Calculate length of a {@link Quat}.\n * @returns |v|\n */\nexport const len: (v: ReadonlyQuat) => Float = vec4.len;\n\n/**\n* Normalize a {@link Quat}.\n*/\nexport const norm: (q: ReadonlyQuat, out?: Quat) => Quat = vec4.norm;\n\n/**\n* Calculates the conjugate of a {@link Quat}.\n*/\nexport function conj(q: ReadonlyQuat, out: Quat = create()): Quat {\n  unchecked(out[0] = -q[0]);\n  unchecked(out[1] = -q[1]);\n  unchecked(out[2] = -q[2]);\n  unchecked(out[3] = q[3]);\n  return out;\n}\n\n/**\n* Calculate the inverse of a {@link Quat}.\n*/\nexport function invert(q: ReadonlyQuat, out: Quat = create()): Quat {\n  const l: Float = 1 / (sqrLen(q) || 1);\n  unchecked(out[0] = -q[0] * l);\n  unchecked(out[1] = -q[1] * l);\n  unchecked(out[2] = -q[2] * l);\n  unchecked(out[3] = q[3] * l);\n  return out;\n}\n\n/**\n * Calculate the Hamilton product of 2 {@link Quat}.\n * @returns out = a * b\n */\nexport function mul(a: ReadonlyQuat, b: ReadonlyQuat, out: Quat = create()): Quat {\n  const\n    ax: Float = unchecked(a[0]),\n    ay: Float = unchecked(a[1]),\n    az: Float = unchecked(a[2]),\n    aw: Float = unchecked(a[3]),\n    bx: Float = unchecked(b[0]),\n    by: Float = unchecked(b[1]),\n    bz: Float = unchecked(b[2]),\n    bw: Float = unchecked(b[3]);\n  unchecked(out[0] = aw * bx + ax * bw + ay * bz - az * by);\n  unchecked(out[1] = aw * by + ay * bw + az * bx - ax * bz);\n  unchecked(out[2] = aw * bz + az * bw + ax * by - ay * bx);\n  unchecked(out[3] = aw * bw - ax * bx - ay * by - az * bz);\n  return out;\n}\n\n/**\n * Rotate a {@link ReadonlyVec3} using a {@link ReadonlyQuat}, by the formula v' = q * v * q^-1\n * @see https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation#Using_quaternion_as_rotations\n * @returns out = q * v * q^-1\n */\nexport function rotateVec3(q: ReadonlyQuat, v: ReadonlyVec3, out: Vec3 = vec3.create()): Vec3 {\n  mat.copy(v, q1, 0, 0, 3);\n  unchecked(q1[3] = 0);\n  mul(mul(q, q1, q1), invert(q, q2), q1);\n  return mat.copy(q1, out, 0, 0, 3) as Vec3;\n}\n\n/**\n * Linear interpolate between 2 {@link Quat}.\n * @returns out = lerp(a, b, t)\n */\nexport function lerp(a: ReadonlyQuat, b: ReadonlyQuat, t: Float, out: Quat = create()): Quat {\n  const cosTheta: Float = dot(a, b);  // calculate cosine from dot product\n  const magB: Float = (cosTheta < 0) ? -1 : 1;\n\n  // use the shortest path and interpolate linearly\n  unchecked(out[0] = a[0] * (1 - t) + b[0] * magB * t);\n  unchecked(out[1] = a[1] * (1 - t) + b[1] * magB * t);\n  unchecked(out[2] = a[2] * (1 - t) + b[2] * magB * t);\n  unchecked(out[3] = a[3] * (1 - t) + b[3] * magB * t);\n\n  return norm(out);\n}\n\n/**\n * Spherical linear interpolate between 2 {@link Quat}.\n */\nexport function slerp(a: ReadonlyQuat, b: ReadonlyQuat, t: Float, out: Quat = create()): Quat {\n  let cosTheta: Float = dot(a, b);  // calculate cosine from dot product\n  let magB: Float = 1;\n  // use the shortest path\n  if (cosTheta < 0) {\n    cosTheta *= -1;\n    magB = -1;\n  }\n\n  // initialize with linear interpolation\n  let scale0: Float = 1 - t;\n  let scale1: Float = t;\n\n  // use spherical interpolation only if the quaternions are not very close\n  if (1 - cosTheta > EPSILON) {\n    const theta: Float = Math.acos(cosTheta) as Float;\n    const sinTheta: Float = Math.sin(theta) as Float;\n    scale0 = (Math.sin((1 - t) * theta) as Float) / sinTheta;\n    scale1 = (Math.sin(t * theta) as Float) / sinTheta;\n  }\n  scale1 *= magB;\n\n  unchecked(out[0] = a[0] * scale0 + b[0] * scale1);\n  unchecked(out[1] = a[1] * scale0 + b[1] * scale1);\n  unchecked(out[2] = a[2] * scale0 + b[2] * scale1);\n  unchecked(out[3] = a[3] * scale0 + b[3] * scale1);\n  return out;\n}\n"],"mappings":"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"}