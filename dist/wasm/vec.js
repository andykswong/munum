import{create,mat3vec2mul,mat4vec3mul,vec2add,vec2dot,vec2lerp,vec2mul,vec2norm,vec2scale,vec2sub,vec3add,vec3cross,vec3dot,vec3lerp,vec3mul,vec3norm,vec3scale,vec3sub,vec4add,vec4dot,vec4lerp,vec4mul,vec4norm,vec4scale,vec4sub}from"../../wasm/index.js";import{ManagedFloat64Array}from"./memory.js";export class Vec2 extends ManagedFloat64Array{constructor(x=0,y=0){super(create(2));this.set([x,y])}get length(){return 2}add(rhs){vec2add(this.byteOffset,this.byteOffset,rhs.byteOffset);return this}sub(rhs){vec2sub(this.byteOffset,this.byteOffset,rhs.byteOffset);return this}mul(m){vec2mul(this.byteOffset,m.byteOffset,this.byteOffset);return this}mulMat3(m){mat3vec2mul(this.byteOffset,m.byteOffset,this.byteOffset);return this}dot(rhs){return vec2dot(this.byteOffset,rhs.byteOffset)}lerp(rhs,t){vec2lerp(this.byteOffset,this.byteOffset,rhs.byteOffset,t);return this}scale(factor){vec2scale(this.byteOffset,this.byteOffset,factor);return this}normalize(){return!!vec2norm(this.byteOffset,this.byteOffset)}}export class Vec3 extends ManagedFloat64Array{constructor(x=0,y=0,z=0){super(create(3));this.set([x,y,z])}get length(){return 3}add(rhs){vec3add(this.byteOffset,this.byteOffset,rhs.byteOffset);return this}sub(rhs){vec3sub(this.byteOffset,this.byteOffset,rhs.byteOffset);return this}mul(m){vec3mul(this.byteOffset,m.byteOffset,this.byteOffset);return this}mulMat4(m){mat4vec3mul(this.byteOffset,m.byteOffset,this.byteOffset);return this}cross(rhs){vec3cross(this.byteOffset,this.byteOffset,rhs.byteOffset);return this}dot(rhs){return vec3dot(this.byteOffset,rhs.byteOffset)}lerp(rhs,t){vec3lerp(this.byteOffset,this.byteOffset,rhs.byteOffset,t);return this}scale(factor){vec3scale(this.byteOffset,this.byteOffset,factor);return this}normalize(){return!!vec3norm(this.byteOffset,this.byteOffset)}}export class Vec4 extends ManagedFloat64Array{constructor(x=0,y=0,z=0,w=0){super(create(4));this.set([x,y,z,w])}get length(){return 4}add(rhs){vec4add(this.byteOffset,this.byteOffset,rhs.byteOffset);return this}sub(rhs){vec4sub(this.byteOffset,this.byteOffset,rhs.byteOffset);return this}mul(m){vec4mul(this.byteOffset,m.byteOffset,this.byteOffset);return this}dot(rhs){return vec4dot(this.byteOffset,rhs.byteOffset)}lerp(rhs,t){vec4lerp(this.byteOffset,this.byteOffset,rhs.byteOffset,t);return this}scale(factor){vec4scale(this.byteOffset,this.byteOffset,factor);return this}normalize(){return!!vec4norm(this.byteOffset,this.byteOffset)}}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,